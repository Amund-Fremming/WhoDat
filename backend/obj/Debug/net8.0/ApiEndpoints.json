[
  {
    "ContainingType": "Backend.Features.Admin.AdminController",
    "Method": "GetAllPlayers",
    "RelativePath": "api/Admin/players",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Admin.AdminController",
    "Method": "DeletePlayer",
    "RelativePath": "api/Admin/players/delete/{playerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Card.CardController",
    "Method": "Add",
    "RelativePath": "api/Card/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Card.CardController",
    "Method": "Delete",
    "RelativePath": "api/Card/delete/{cardId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cardId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Card.CardController",
    "Method": "GetAll",
    "RelativePath": "api/Card/getall",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.Features.Card.CardDto, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Features.Game.GameController",
    "Method": "CreateGame",
    "RelativePath": "api/Game/games",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "gameRequest",
        "Type": "Backend.Features.Game.CreateGameRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Features.Game.GameController",
    "Method": "DeleteGame",
    "RelativePath": "api/Game/games/{gameId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "gameId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Game.GameController",
    "Method": "GetBoardWithBoardCards",
    "RelativePath": "api/Game/games/{gameId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "gameId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Player.PlayerController",
    "Method": "UpdatePlayer",
    "RelativePath": "api/Player/players/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerDto",
        "Type": "Backend.Features.Player.PlayerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Auth.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Backend.Features.Auth.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Features.Auth.AuthController",
    "Method": "RegisterNewPlayer",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Backend.Features.Auth.RegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]